import pygame
from pygame.sprite import Sprite, Group, GroupSingle
from random import randint
from time import sleep

print('Invasão Espacial, versão beta: 0.2')

q = 0
nivel = 0

loop = True

preto = (0, 0, 0)

tamanho_tela = 800, 600
superficie = pygame.display.set_mode(tamanho_tela)
pygame.display.set_caption('Invasão Espacial')

fundo = pygame.transform.scale(pygame.image.load('Game-images/space.jpg'), tamanho_tela)

pygame.font.init()
fonte = pygame.font.SysFont(None, 30)
fonte_titulo = pygame.font.SysFont(None, 50)

pontos = 0


def tela_inicial():
    rodando = True
    while rodando:
        superficie.fill(preto)
        titulo = fonte_titulo.render("Invasão Espacial", True, 'white')
        iniciar = fonte.render('Pressione ESPAÇO para jogar', False, 'white')
        superficie.blit(titulo, (tamanho_tela[0]//2 - titulo.get_width()//2, 25))
        superficie.blit(iniciar, (tamanho_tela[0] // 2 - iniciar.get_width() // 2, 500))
        pygame.display.flip()

        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                rodando = False
            elif evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_SPACE:  # Pressione a tecla espaço para começar o jogo
                    rodando = False


def game_over():
    rodando = True
    while rodando:
        superficie.fill(preto)
        perdeu = fonte_titulo.render('Game over!', True, 'white')
        pontuação = fonte.render(f'Pontuação: {pontos}', True, 'white')
        superficie.blit(perdeu, (tamanho_tela[0] // 2 - perdeu.get_width() // 2, tamanho_tela[1] // 2 - perdeu.get_width() // 2 ))
        superficie.blit(pontuação, (tamanho_tela[0] // 2 - pontuação.get_width() // 2, 500))
        pygame.display.flip()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    rodando = False


tela_inicial()

class Tiro(Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = pygame.image.load('game-python-imagens/toast_small.png')
        self.rect = self.image.get_rect(center=(x, y))

        self.rect.centerx = x
        self.rect.bottom = y

        self.velocidade = 5

    def update(self):
        self.rect.y -= self.velocidade

        global tirosQ

        if self.rect.y < 0:
            self.kill()


class Jogador(Sprite):
    def __init__(self, tiros):
        super().__init__()

        self.image = pygame.transform.scale(pygame.image.load('Game-images/space-invaders.png'), (80, 80)) # Carrega a imagem do personagem
        self.rect = self.image.get_rect() # Obtendo o retângulo delimitador da imagem.

        self.rect.centerx = tamanho_tela[0] // 2
        self.rect.bottom = tamanho_tela[1] - 10

        self.velocidade = 3.5

        self.tiros = tiros

    def update(self):

        keys = pygame.key.get_pressed()

        if keys[pygame.K_LEFT]:
            self.rect.x -= self.velocidade + 0.5
        if keys[pygame.K_RIGHT]:
            self.rect.x += self.velocidade
        if keys[pygame.K_UP]:
            self.rect.y -= self.velocidade + 0.5
        if keys[pygame.K_DOWN]:
            self.rect.y += self.velocidade

        if self.rect.x < 0:
            self.rect.x = 0

        if self.rect.x > 800 - 80:
            self.rect.x = 800 - 80

        if self.rect.y < 0:
            self.rect.y = 0

        if self.rect.y > 600 - 80:
            self.rect.y = 600 - 80

    def atirar(self):
        global tirosQ
        if len(self.tiros) < 3:
            self.tiros.add(Tiro(self.rect.centerx, self.rect.top))


class Virus(Sprite):
    def __init__(self):
        super().__init__()
        self.velocidade = 1
        self.image = pygame.image.load('game-python-imagens/inimigo_1.png')
        self.rect = self.image.get_rect(
            center=(randint(20, 800), 0)
        )
        if pontos < 80:
            self.velocidade = 1
        elif pontos > 80:
            self.velocidade = 1.5
        elif pontos > 100:
            self.velocidade = 2
        elif pontos > 120:
            self.velocidade = 2.5
        elif pontos > 160:
            self.velocidade = 3
        elif pontos > 200:
            self.velocidade = 3.5

    def update(self):
        self.rect.y += self.velocidade

        if self.rect.y > 600:
            self.kill()
            global q
            global pontos
            q -= 1
            pontos -= 1


grupo_tiro = Group()
grupo_inimigos = Group()
jogador = Jogador(grupo_tiro)
grupo_jogador = GroupSingle(jogador)

grupo_inimigos.add(Virus())

clock = pygame.time.Clock()

jogo_perdido = False

while loop:

    if pontos < 21:
        if q < 3:
            grupo_inimigos.add(Virus())
            q += 1

    if pontos > 20:
        if q < 4:
            grupo_inimigos.add(Virus())
            q += 1
        nivel = 1

    if pontos > 40:
        if q < 5:
            grupo_inimigos.add(Virus())
            q += 1
        nivel = 2

    if pontos > 60:
        if q < 6:
            grupo_inimigos.add(Virus())
            q += 1
        nivel = 3

    if pontos > 80:
        nivel = 4

    if pontos > 100:
        nivel = 5

    if pontos > 120:
        nivel = 6

    if pontos > 140:
        nivel = 7
        if q < 7:
            grupo_inimigos.add(Virus())
            q += 1

    if pontos > 160:
        nivel = 8

    if pontos > 180:
        nivel = 9
        if q < 8:
            grupo_inimigos.add(Virus())
            q += 1

    if pontos > 200:
        nivel = 10

    clock.tick(120)

    superficie.blit(fundo, (0,0))

    for evento in pygame.event.get():
        if evento.type == pygame.QUIT:
            loop = False

        if evento.type == pygame.KEYDOWN :
            if evento.key == pygame.K_SPACE:
                jogador.atirar()

    grupo_jogador.draw(superficie)
    grupo_jogador.update()
    grupo_inimigos.draw(superficie)
    grupo_inimigos.update()
    grupo_tiro.draw(superficie)
    grupo_tiro.update()

    for tiro in grupo_tiro:
        inimigos_atingidos = pygame.sprite.spritecollide(tiro, grupo_inimigos, True)

        for inimigo in inimigos_atingidos:
            tiro.kill()
            q -= 1
            pontos += 1

    colisoes = pygame.sprite.spritecollide(jogador, grupo_inimigos, False)

    if colisoes:
        loop = False
        game_over()
        print(f'Pontuação: {pontos}')

    texto_pontos = fonte.render(f'Pontos: {pontos}', True, 'white')
    texto_nivel = fonte.render(f'Nivel: {nivel}', True, (255, 255, 255))

    superficie.blit(texto_pontos, (10,10))
    superficie.blit(texto_nivel, (10, 40))

    pygame.display.update()

print('Obrigado por jogar Invasão Espacial.')